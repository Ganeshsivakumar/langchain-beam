"use strict";(globalThis.webpackChunkdocs_site=globalThis.webpackChunkdocs_site||[]).push([[930],{8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var t=a(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},9258:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"how-to/use-llm-transform","title":"Use LLM transfrom","description":"This notebook shares how to create a example sentiment analysis pipeline using apache beam","source":"@site/docs/how-to/use-llm-transform.md","sourceDirName":"how-to","slug":"/how-to/use-llm-transform","permalink":"/langchain-beam/docs/how-to/use-llm-transform","draft":false,"unlisted":false,"editUrl":"https://github.com/Ganeshsivakumar/langchain-beam/tree/main/docs/docs-site/docs/docs/how-to/use-llm-transform.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Use Embedding Transform","permalink":"/langchain-beam/docs/how-to/use-embedding-transform"},"next":{"title":"Tutorials","permalink":"/langchain-beam/docs/category/tutorials"}}');var r=a(4848),i=a(8453);const o={},s="Use LLM transfrom",c={},p=[];function l(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"use-llm-transfrom",children:"Use LLM transfrom"})}),"\n",(0,r.jsx)(n.p,{children:"This notebook shares how to create a example sentiment analysis pipeline using apache beam\nand use LLM transform to catragorise the sentiment of product reviews\nand run the pipeline locally using direct runner."}),"\n",(0,r.jsx)(n.p,{children:"The pipeline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"loads the csv file that contains reviews and feedback of a product"}),"\n",(0,r.jsx)(n.li,{children:"uses LLM transform to catragorise reviews"}),"\n",(0,r.jsx)(n.li,{children:"print the model output"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Create a maven project"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'mvn org.apache.maven.plugins:maven-archetype-plugin:3.1.2:generate \\\n    -DarchetypeArtifactId="maven-archetype-quickstart" \\\n    -DarchetypeGroupId="org.apache.maven.archetypes" \\\n    -DarchetypeVersion="1.4" \\\n    -DgroupId="com.example" \\\n    -DartifactId="sentimentanalysis"\n\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Add required dependencies in pom.xml"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.beam</groupId>\n    <artifactId>beam-runners-direct-java</artifactId>\n    <version>2.60.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.beam</groupId>\n    <artifactId>beam-sdks-java-core</artifactId>\n    <version>2.60.0</version>\n</dependency>\n<dependency>\n    <groupId>io.github.ganeshsivakumar</groupId>\n    <artifactId>langchain-beam</artifactId>\n    <version>0.2.0</version>\n</dependency>\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Create the beam pipeline with LLM transform"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'\nimport org.apache.beam.runners.direct.DirectRunner;\nimport org.apache.beam.sdk.Pipeline;\nimport org.apache.beam.sdk.io.TextIO;\nimport org.apache.beam.sdk.options.PipelineOptions;\nimport org.apache.beam.sdk.options.PipelineOptionsFactory;\nimport org.apache.beam.sdk.transforms.DoFn;\nimport org.apache.beam.sdk.transforms.ParDo;\n\nimport com.langchainbeam.LangchainBeam;\nimport com.langchainbeam.LangchainModelHandler;\nimport com.langchainbeam.model.LangchainBeamOutput;\nimport com.langchainbeam.model.openai.OpenAiModelOptions;\n\npublic class SentimentAnalysis {\n\n    public static void main(String[] args) {\n\n         // instruction prompt\n        String prompt = "Categorize the product review as Positive or Negative.";\n\n        String apiKey = System.getenv("OPENAI_API_KEY");\n\n        // Create model options\n        OpenAiModelOptions modelOptions = OpenAiModelOptions.builder()\n                .modelName("gpt-4o-mini")\n                .apiKey(apiKey)\n                .build();\n\n        // create handler\n        LangchainModelHandler sentimentHandler = new LangchainModelHandler(modelOptions, prompt);\n\n        // create beam pipeline options\n        PipelineOptions options = PipelineOptionsFactory.create();\n        // set DirectRunner\n        options.setRunner(DirectRunner.class);\n\n        // create beam pipeline\n        Pipeline p = Pipeline.create(options);\n\n        p.apply(TextIO.read().from("/home/ganesh/Downloads/product_reviews.csv"))// set file path\n                .apply(LangchainBeam.run(sentimentHandler)) // apply the LLM transform.\n                .apply(ParDo.of(new DoFn<LangchainBeamOutput, Void>() {\n\n                    @ProcessElement\n                    public void processElement(@Element LangchainBeamOutput out) {\n                        System.out.println("Model Output: " + out.getOutput());\n                    }\n                }));\n\n        p.run();\n\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Check out the example sentiment analysis pipeline with product reviews data on ",(0,r.jsx)(n.a,{href:"https://github.com/Ganeshsivakumar/langchain-beam/blob/main/example/langchain-beam-example/src/main/java/com/langchainbeam/example/SentimentAnalysis.java",children:"github"})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);